{
  "name": "i18n-ai-extractor",
  "displayName": "I18n AI Extractor",
  "description": "AI-powered locale key extraction",
  "version": "0.1.3",
  "publisher": "iduane",
  "icon": "OIG4.png",
  "repository": "https://github.com/iduane/i18n-ai-extractor",
  "homepage": "https://github.com/iduane/i18n-ai-extractor",
  "license": "MIT",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:html"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.extractLocale",
        "title": "Extract locale"
      },
      {
        "command": "extension.extractLocaleNoConfirm",
        "title": "Extract locale without confirmation"
      },
      {
        "command": "extension.openLocaleFile",
        "title": "Open Locale File at I18n Key"
      },
      {
        "command": "extension.scanForUnlocalizedText",
        "title": "Scan for Unlocalized Text"
      },
      {
        "command": "extension.scanFolderForI18n",
        "title": "Scan folder/file for I18n"
      }
    ],
    "keybindings": [
      {
        "command": "extension.extractLocale",
        "key": "ctrl+alt+y",
        "mac": "cmd+alt+y",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "extension.extractLocaleNoConfirm",
        "key": "ctrl+alt+win+y",
        "mac": "ctrl+alt+cmd+y",
        "when": "editorHasSelection || editorTextFocus"
      },
      {
        "command": "extension.openLocaleFile",
        "key": "ctrl+alt+t",
        "mac": "cmd+alt+t",
        "when": "editorHasSelection || editorTextFocus"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.scanFolderForI18n",
          "when": "explorerResourceIsFolder || resourceLangId == javascript || resourceLangId == typescript || resourceLangId == html || resourceLangId == vue || resourceLangId == javascriptreact || resourceExtname == .mjs || resourceExtname == .cjs",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "I18n AI Extractor",
      "properties": {
        "i18nAiExtractor.localePath": {
          "type": "string",
          "default": "",
          "description": "Path to your locale file (relative to workspace root)"
        },
        "i18nAiExtractor.openAIApiKey": {
          "type": "string",
          "default": "",
          "description": "Your OpenAI API key"
        },
        "i18nAiExtractor.openAIBasePath": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "description": "Base path for OpenAI API"
        },
        "i18nAiExtractor.chatTemplate": {
          "type": "string",
          "default": "",
          "description": "Custom template for OpenAI chat prompt. Use {{text}} as a placeholder for the selected text."
        },
        "i18nAiExtractor.unlocalizedTextPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom prompt for unlocalized text scanning. Use {{text}} as a placeholder for the scanned text.",
          "editPresentation": "multilineText"
        },
        "i18nAiExtractor.i18nFunctionName": {
          "type": "string",
          "default": "i18next.t",
          "description": "Name of the i18n function to use"
        },
        "i18nAiExtractor.i18nDetectPrefixNames": {
          "type": "string",
          "default": "i18next.t",
          "description": "Name list of the i18n key usages, separated by commas"
        },
        "i18nAiExtractor.maxRequestSize": {
          "type": "number",
          "default": 20000,
          "description": "Maximum size of the text to be sent to OpenAI for localization"
        },
        "i18nAiExtractor.ignoredProps": {
          "type": "array",
          "default": [
            "style",
            "width",
            "minWidth",
            "maxWidth",
            "height",
            "minHeight",
            "maxHeight",
            "id",
            "src",
            "alt",
            "href",
            "d",
            "transform",
            "xmlns",
            "fill",
            "type",
            "prop",
            "className",
            "class",
            "size",
            "useState",
            "customProp1",
            "customProp2"
          ],
          "description": "List of properties to ignore when scanning for unlocalized text"
        },
        "i18nAiExtractor.scanFileExtensions": {
          "type": "array",
          "default": [
            "js",
            "jsx",
            "html",
            "vue",
            "mjs",
            "cj",
            "ts",
            "tsx",
            "json",
            "handlebars"
          ],
          "description": "List of file extensions to scan for unlocalized text"
        },
        "i18nAiExtractor.scanSkipFileExtensions": {
          "type": "array",
          "default": [
            "story.js",
            "story.jsx",
            "story.ts",
            "story.tsx",
            "stories.js",
            "stories.jsx",
            "stories.ts",
            "stories.tsx",
            "test.js",
            "test.jsx",
            "test.ts",
            "test.tsx",
            "spec.js",
            "spec.jsx",
            "spec.ts",
            "spec.tsx"
          ],
          "description": "List of file extensions to skip when scanning for unlocalized text"
        },
        "i18nAiExtractor.scanSkipFolders": {
          "type": "array",
          "default": [
            "node_modules",
            "dist",
            "build",
            "public",
            "static",
            "assets",
            "images",
            "__tests__",
            "__snapshots__",
            "coverage",
            "__mocks__"
          ],
          "description": "List of folders to skip when scanning for unlocalized text"
        },
        "i18nAiExtractor.ignoredValuePrefixes": {
          "type": "array",
          "default": [
            "bg-",
            "btn-",
            "text-",
            "border-",
            "p-",
            "m-",
            "flex",
            "grid",
            "col-",
            "row-",
            "sm:",
            "md:",
            "lg:",
            "xl:",
            "2xl:",
            "var\\(--",
            "theme\\(",
            "i18n:"
          ],
          "description": "List of value prefixes to ignore when scanning for unlocalized text"
        },
        "i18nAiExtractor.ignoredFunctions": {
          "type": "array",
          "default": [
            "classNames",
            "cn",
            "clsx",
            "useState",
            "log",
            "log.error",
            "log.warn",
            "log.info",
            "log.debug",
            "log.dev.error",
            "log.dev.warn",
            "log.dev.info",
            "log.dev.debug",
            "console.log",
            "console.error",
            "console.warn",
            "console.info",
            "console.debug",
            "notify",
            "find",
            "css",
            "\\.on",
            "\\.off"
          ],
          "description": "List of function names to ignore when scanning for unlocalized text"
        },
        "i18nAiExtractor.ignoreCamelCase": {
          "type": "boolean",
          "default": true,
          "description": "Ignore camel case text when scanning for unlocalized text"
        },
        "i18nAiExtractor.ignoreSnakeCase": {
          "type": "boolean",
          "default": true,
          "description": "Ignore snake case text when scanning for unlocalized text"
        }
      }
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js",
    "compile": "node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "vscode:prepublish": "npm run package",
    "package": "node esbuild.js --production"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.60.0",
    "esbuild": "^0.23.1",
    "eslint": "^7.27.0"
  },
  "dependencies": {
    "@google-cloud/speech": "^6.7.0",
    "axios": "^1.7.5",
    "node-record-lpcm16": "^1.0.1"
  }
}
